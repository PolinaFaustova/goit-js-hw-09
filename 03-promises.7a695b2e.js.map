{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAO,CACXC,KAAAJ,EACAK,WAAYL,EAAKE,cAAc,uBAC/BI,UAAWN,EAAKE,cAAc,sBAC9BK,YAAaP,EAAKE,cAAc,wBAChCM,UAAWP,SAASC,cAAc,0BAGpC,SAASO,EAAcC,EAAUC,EAAOC,EAAMC,GAC5C,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EAEFI,EAAQ,CAAEG,SAAAX,EAAUY,MAAAX,IAGpBQ,EAAO,CAAEE,SAAAX,EAAUY,MAAAX,G,GAEpBA,E,IAIFY,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,MAC5C,CACAO,QAAS,MAGTR,EAAWR,GACbJ,EAAcY,EAAW,EAAGC,EAAQV,EAAMA,EAAMC,E,IAGnDiB,OAAM,SAAAN,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAA3B,GAAS4B,OAAOK,QAAQ,sBAAqCH,OAAfP,EAAS,QAAYO,OAANN,EAAM,MAAK,CACtEO,QAAS,MAEPR,EAAWR,GACbJ,EAAcY,EAAW,EAAGC,EAAQV,EAAMA,EAAMC,E,IAexDV,EAAKC,KAAK4B,iBAAiB,UAV3B,SAAsBC,GACpBA,EAAMC,iBAMNzB,EADe,EAHD0B,SAAShC,EAAKE,WAAW+B,OAC1BD,SAAShC,EAAKG,UAAU8B,OACtBD,SAAShC,EAAKI,YAAY6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst refs = {\n  form,\n  delayInput: form.querySelector('input[name=\"delay\"]'),\n  stepInput: form.querySelector('input[name=\"step\"]'),\n  amountInput: form.querySelector('input[name=\"amount\"]'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay, step, amount) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        {\n          timeout: 8000,\n        }\n      );\n      if (position < amount) {\n        createPromise(position + 1, delay + step, step, amount);\n      }\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n        timeout: 8000,\n      });\n      if (position < amount) {\n        createPromise(position + 1, delay + step, step, amount);\n      }\n    });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  const amount = parseInt(refs.amountInput.value);\n  let position = 1;\n  createPromise(position, delay, step, amount);\n}\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$refs","form","delayInput","stepInput","amountInput","btnSubmit","$ce04d3a99e08e73b$var$createPromise","position1","delay1","step","amount","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","timeout","catch","failure","addEventListener","event","preventDefault","parseInt","value"],"version":3,"file":"03-promises.7a695b2e.js.map"}