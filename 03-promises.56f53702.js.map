{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAO,C,KACXH,EACAI,WAAYJ,EAAKE,cAAc,uBAC/BG,UAAWL,EAAKE,cAAc,sBAC9BI,YAAaN,EAAKE,cAAc,wBAChCK,UAAWN,SAASC,cAAc,0BAGpC,SAASM,EAAcC,EAAUC,EAAOC,EAAMC,GAC5C,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EAEFI,EAAQ,CAAEG,SAAAX,EAAUY,MAAAX,IAGpBQ,EAAO,CAAEE,SAAAX,EAAUY,MAAAX,GAAQ,GAE5BA,EAAM,IAIRY,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,QAAQC,IAAI,uBAAqBJ,QAAiBC,OAC9CD,EAAWR,GACbJ,EAAcY,EAAW,EAAGC,EAAQV,EAAMA,EAAMC,EAAO,IAG1Da,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBE,QAAQC,IAAI,sBAAoBJ,QAAeC,OAC3CD,EAAWR,GACbJ,EAAcY,EAAW,EAAGC,EAAQV,EAAMA,EAAMC,EAAO,G,CAe/DT,EAAKuB,KAAKC,iBAAiB,UAV3B,SAAsBC,GACpBA,EAAMC,iBAMNrB,EADe,EAHDsB,SAAS3B,EAAKC,WAAW2B,OAC1BD,SAAS3B,EAAKE,UAAU0B,OACtBD,SAAS3B,EAAKG,YAAYyB,O","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst refs = {\n  form,\n  delayInput: form.querySelector('input[name=\"delay\"]'),\n  stepInput: form.querySelector('input[name=\"step\"]'),\n  amountInput: form.querySelector('input[name=\"amount\"]'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay, step, amount) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      if (position < amount) {\n        createPromise(position + 1, delay + step, step, amount);\n      }\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      if (position < amount) {\n        createPromise(position + 1, delay + step, step, amount);\n      }\n    });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  const amount = parseInt(refs.amountInput.value);\n  let position = 1;\n  createPromise(position, delay, step, amount);\n}\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$refs","delayInput","stepInput","amountInput","btnSubmit","$47d4ff9957288465$var$createPromise","position1","delay1","step","amount","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","console","log","catch","form","addEventListener","event","preventDefault","parseInt","value"],"version":3,"file":"03-promises.56f53702.js.map"}